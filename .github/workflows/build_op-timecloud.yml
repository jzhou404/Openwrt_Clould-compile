#
# This is free software, lisence use GPL 3.0.
# 
# Copyright (C) 2022 jzhou404 <jzhou404@gmail.com>
#
# <https://github.com/jzhou404/Openwrt_workflow-compile>
#

name: Build OP-x64-2

on:
  repository_dispatch:
  workflow_dispatch:
   
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: timecloud.config
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -qq update -y
          sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential
          sudo -E apt-get -qq install -y bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib
          sudo -E apt-get -qq install -y git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev
          sudo -E apt-get -qq install -y libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev 
          sudo -E apt-get -qq install -y libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python3
          sudo -E apt-get -qq install -y python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo
          sudo -E apt-get -qq install -y uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev clang
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
        
    - name: Git clone coolsnowwolf code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: Patch feeds.conf
      run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' openwrt/feeds.conf.default          
       
    - name: Update feeds
      run: |
       cd openwrt
       ./scripts/feeds update -a

    - name: Install feeds
      run: |
       cd openwrt
       ./scripts/feeds install -a 
      
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
                
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
       
    - name: Compile firmware
      run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
     
    - name: Prepare artifact
      run: |
          cd openwrt
          mkdir -p ./artifact
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

    - name: Upload buildinfo
      uses: actions/upload-artifact@main
      with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

    - name: Upload package
      uses: actions/upload-artifact@main
      with:
          name: OpenWrt_package
          path: ./artifact/package/

    - name: Upload firmware
      uses: actions/upload-artifact@main
      with:
          name: OpenWrt_firmware
          path: ./bin/targets/
